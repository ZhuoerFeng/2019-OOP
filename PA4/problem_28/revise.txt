大型错误1：
  rectangle、square、circular类中，对于shape类的继承方式默认为了private继承，导致随后调用type()是一个非法调用。正确的的方法即为修改为public继承

大型错误2：
  type函数的调用。在基类shape类中，type被定为=0，因而shape类变成了抽象类，type为纯虚函数。在这种情况下，type不被允许直接调用，而只能通过指针来进行调用。因而，在重载<<时，我们在这里调用type，在构造函数中将其删去。这样子不会造成纯虚函数的调用。

大型错误3：
  内存泄露。我们发现在继承类中都没有实现析构函数，会造成严重的内存泄漏。观察main函数，对于rectangle传入了数组指针，因而在析构时需要delete[]，而square和circular实例传入的是double指针，因而删除时delete。

小型错误1：
    在rectangle类里，构造函数是一个不知道是啥的IntegerWarpper，我直接改成了Reactangle构造函数。
小型错误2：
    基类中的*size原本是一个私有成员，在继承类中由于被调用多次（而且调用方式是错的），因此将其改成protected类，在这种情况下，我们既能够在继承类中调用之，又能够实现类的封装。